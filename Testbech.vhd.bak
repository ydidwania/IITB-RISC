library ieee;
use ieee.std_logic_1164.all;
library std;
use std.textio.all;

entity Testbench is
end entity;
architecture Behave of Testbench is
  component StringRecognizer is
   port (X4,X3,X2,X1,X0: in std_logic; W: out std_logic;
	clk,reset: in std_logic);
  end component;

  signal X4,X3,X2,X1,X0,clk,reset,W: std_logic := '0';

  function to_std_logic(x: bit) return std_logic is
      variable ret_val: std_logic;
  begin  
      if (x = '1') then
        ret_val := '1';
      else 
        ret_val := '0';
      end if;
      return(ret_val);
  end to_std_logic;

  function to_string(x: string) return string is
      variable ret_val: string(1 to x'length);
      alias lx : string (1 to x'length) is x;
  begin  
      ret_val := lx;
      return(ret_val);
  end to_string;

begin
  process 
    variable err_flag : boolean := false;
    File INFILE: text open read_mode is "D:\VHDL\Projects\StringRecognizer\tracefile2.txt";
    FILE OUTFILE: text  open write_mode is "D:\VHDL\Projects\StringRecognizer\OUTPUTS.txt";

    ---------------------------------------------------
    -- edit the next two lines to customize
    variable input_vector: bit_vector ( 6 downto 0);
    variable output_vector: bit;
	 variable tmp: bit;
    ----------------------------------------------------
    variable INPUT_LINE: Line;
    variable OUTPUT_LINE: Line;
    variable LINE_COUNT: integer := 0;
    
  begin
   
    while not endfile(INFILE) loop 
          LINE_COUNT := LINE_COUNT + 1;
	
	  readLine (INFILE, INPUT_LINE);
          read (INPUT_LINE, input_vector);
          read (INPUT_LINE, output_vector);
			 read (INPUT_LINE, tmp);

          --------------------------------------
          -- from input-vector to DUT inputs
	  reset <= to_std_logic(input_vector(6));
	  clk <= to_std_logic(input_vector(5));
	  X4 <= to_std_logic(input_vector(4));
	  X3 <= to_std_logic(input_vector(3));
	  X2 <= to_std_logic(input_vector(2));
	  X1 <= to_std_logic(input_vector(1));
	  X0 <= to_std_logic(input_vector(0));
          --------------------------------------


	  -- let circuit respond.
          wait for 20 ns;

          --------------------------------------
	  -- check outputs.
	  if (W /= to_std_logic(output_vector)) then
             
             err_flag := true;
          end if;
			 
             write(OUTPUT_LINE, to_bit(w));
             writeline(OUTFILE, OUTPUT_LINE);
          --------------------------------------
    end loop;

    assert (err_flag) report "SUCCESS, all tests passed." severity note;
    assert (not err_flag) report "FAILURE, some tests failed." severity error;

    wait;
  end process;

  dut: StringRecognizer 
     port map(clk => clk,
				  reset => reset,
				  X4 => X4,
              X3 => X3,
              X2 => X2,
              X1 => X1,
              X0 => X0,
              W => W);

end Behave;
